// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Car.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Messages {

  /// <summary>Holder for reflection information generated from Car.proto</summary>
  public static partial class CarReflection {

    #region Descriptor
    /// <summary>File descriptor for Car.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CarReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglDYXIucHJvdG8SCG1lc3NhZ2VzIl8KA0NhchIMCgRtYWtlGAEgASgJEg0K",
            "BW1vZGVsGAIgASgJEhgKEHJlZ2lzdHJhdGlvblllYXIYAyABKAUSDQoFcHJp",
            "Y2UYBCABKAUSEgoKb3duZXJFbWFpbBgFIAEoCSIjCgRDYXJzEhsKBGNhcnMY",
            "ASADKAsyDS5tZXNzYWdlcy5DYXJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Messages.Car), global::Messages.Car.Parser, new[]{ "Make", "Model", "RegistrationYear", "Price", "OwnerEmail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Messages.Cars), global::Messages.Cars.Parser, new[]{ "Cars_" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Car : pb::IMessage<Car> {
    private static readonly pb::MessageParser<Car> _parser = new pb::MessageParser<Car>(() => new Car());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Car> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messages.CarReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Car() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Car(Car other) : this() {
      make_ = other.make_;
      model_ = other.model_;
      registrationYear_ = other.registrationYear_;
      price_ = other.price_;
      ownerEmail_ = other.ownerEmail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Car Clone() {
      return new Car(this);
    }

    /// <summary>Field number for the "make" field.</summary>
    public const int MakeFieldNumber = 1;
    private string make_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Make {
      get { return make_; }
      set {
        make_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 2;
    private string model_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "registrationYear" field.</summary>
    public const int RegistrationYearFieldNumber = 3;
    private int registrationYear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RegistrationYear {
      get { return registrationYear_; }
      set {
        registrationYear_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 4;
    private int price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "ownerEmail" field.</summary>
    public const int OwnerEmailFieldNumber = 5;
    private string ownerEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerEmail {
      get { return ownerEmail_; }
      set {
        ownerEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Car);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Car other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Make != other.Make) return false;
      if (Model != other.Model) return false;
      if (RegistrationYear != other.RegistrationYear) return false;
      if (Price != other.Price) return false;
      if (OwnerEmail != other.OwnerEmail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Make.Length != 0) hash ^= Make.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (RegistrationYear != 0) hash ^= RegistrationYear.GetHashCode();
      if (Price != 0) hash ^= Price.GetHashCode();
      if (OwnerEmail.Length != 0) hash ^= OwnerEmail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Make.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Make);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Model);
      }
      if (RegistrationYear != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RegistrationYear);
      }
      if (Price != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Price);
      }
      if (OwnerEmail.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OwnerEmail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Make.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Make);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (RegistrationYear != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RegistrationYear);
      }
      if (Price != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Price);
      }
      if (OwnerEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerEmail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Car other) {
      if (other == null) {
        return;
      }
      if (other.Make.Length != 0) {
        Make = other.Make;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.RegistrationYear != 0) {
        RegistrationYear = other.RegistrationYear;
      }
      if (other.Price != 0) {
        Price = other.Price;
      }
      if (other.OwnerEmail.Length != 0) {
        OwnerEmail = other.OwnerEmail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Make = input.ReadString();
            break;
          }
          case 18: {
            Model = input.ReadString();
            break;
          }
          case 24: {
            RegistrationYear = input.ReadInt32();
            break;
          }
          case 32: {
            Price = input.ReadInt32();
            break;
          }
          case 42: {
            OwnerEmail = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Cars : pb::IMessage<Cars> {
    private static readonly pb::MessageParser<Cars> _parser = new pb::MessageParser<Cars>(() => new Cars());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Cars> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messages.CarReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cars() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cars(Cars other) : this() {
      cars_ = other.cars_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cars Clone() {
      return new Cars(this);
    }

    /// <summary>Field number for the "cars" field.</summary>
    public const int Cars_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Messages.Car> _repeated_cars_codec
        = pb::FieldCodec.ForMessage(10, global::Messages.Car.Parser);
    private readonly pbc::RepeatedField<global::Messages.Car> cars_ = new pbc::RepeatedField<global::Messages.Car>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Messages.Car> Cars_ {
      get { return cars_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Cars);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Cars other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cars_.Equals(other.cars_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cars_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      cars_.WriteTo(output, _repeated_cars_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cars_.CalculateSize(_repeated_cars_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Cars other) {
      if (other == null) {
        return;
      }
      cars_.Add(other.cars_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cars_.AddEntriesFrom(input, _repeated_cars_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
